10='cd 10'
11='cd 11'
12='cd 12'
13='cd 13'
14='cd 14'
1='cd 1'
2='cd 2'
3='cd 3'
4='cd 4'
5='cd 5'
6='cd 6'
7='cd 7'
8='cd 8'
9='cd 9'
alais='echo -e "\t${inv}Alias für Alias${res}\n" && alias'
APTinstall='echo -e "\t${inv}Installiere Paket${res}\n" && sudo apt install'
APTpurge='echo -e "\t${inv}Entferne Paket${res}\n" && sudo apt purge'
APTsearch='echo -e "\t${inv}Durchsuche Paketdatenbank${res}\n" && apt-cache search'
APTshow='echo -e "\t${inv}Zeige Paketinformationen${res}\n" && apt show'
APTupdate=$'\n\techo -e "\\tAktualisiere Pakete\\n\\t\\t" | lolcat\n\tsudo apt-get update\n\tapt list --upgradable\n\techo -e "\\t${inv} Pakete upgraden? ${res}\\n"\n\tsudo apt-get upgrade\n\tsudo apt-get autoremove -y\n\tsudo apt-get autoclean\n\techo -e "\\tapt autoremove und apt autoclean \\n\\t\\terfolgreich durch geballert!\\n" | lolcat'
AUS='sudo shutdown now'
cat2='batcat --number --terminal-width 80 --decorations=always --color=always --wrap=auto --theme=Coldark-Dark'
cat3='batcat --number --terminal-width 80 --decorations=always --color=always --wrap=auto --theme=OneHalfDark'
cat4='batcat --force-colorization --number --terminal-width 80 --wrap=auto --theme=Dracula'
cat='batcat --force-colorization --terminal-width 80 --theme=ansi'
c='echo -e "\t${inv}Bildschirm löschen${res}\n" zsh && clear'
CHmod='chmod --verbose --recursive u+x $(pwd)/*.sh && chmod --verbose --recursive u+x $(pwd)/*.zsh'
cp='echo -e "\t${inv}Kopiere Dateien/Verzeichnisse cp -ivr(bestätigt)${res}\n" && cp -ivr'
DATE=$'echo -e "\\t${inv}Zeige das aktuelle Datum  $(date "+%A, %-d. %B %Y"):{$res}" && echo -e "${inv2} $(date "+%A, %-d. %B %Y")${res} \\n "&& echo -e "${inv} oder $ (date +%F_%H-%M)\\t ${res}" \t&& echo -e "${inv2} $(date "+%F_%H-%M") ${res}"'
d='dirs -v'
debug='echo "Debugging..."; set -x'
df='df -Tha --total'
DF=pydf
DPinstalled='echo -e "\t${inv}Zeigt alle installierten Pakete auf Ihrem Debian-System ... wird mit cat /var/log/dpkg.log gemacht:${res}\n" && cat /var/log/dpkg.log | grep "status installed" | awk "{print \$5}" | cut -d ":" -f 1 | sort'
DPlist='echo -e "\t${inv}Liste Dateien eines Pakets auf${res}\n" && dpkg --listfiles'
DPtime-36='echo -e '\''\n\t\tHeute und gestern installiert:\n'\'' && grep -E "$(date -d '\''yesterday'\'' +'\''%Y-%m-%d'\'')|$(date +'\''%Y-%m-%d'\'')" /var/log/dpkg.log | grep '\''status installed/n'\'
DPtime-all='echo -e '\''\n\t\tHeute und gestern installiert:\n'\'' && cat /var/log/dpkg.log | grep '\''status installed'\'' | sort -k1,1 -k2,2'
e1='echo -e "\n\t${inv} exa -A -l --tree -level 1${res}\n" && exa --tree --level 1 --all --long --color-scale --icons'
e2='echo -e "\n\t${inv} exa -A -l --tree -level 2${res}\n" && exa --tree --level 2 --all --long --color-scale --icons'
e3='echo -e "\t${inv} exa -A -l --tree -level 3${res}\n" && exa --tree --level 3 --all --long --color-scale --icons'
e4='echo -e "\t${inv} exa -A -l --tree -level 4${res}\n" && exa --tree --level 4 --all --long --color-scale --icons'
_='echo -e "\t${inv}Führe als Superuser (sudo) aus${res}\n" && sudo'
edit=micro
egrep='egrep --color=auto'
EIN='sudo shutdown -r now'
fgrep='fgrep --color=auto'
fhere='find . -name '
FORl='fortune -l 30% drugs 30% linux 10% paradoxum 10% ascii-art 10% education 10% zippy | lolcat'
FORs='fortune -l 30% drugs 30% linux 10% paradoxum 10% ascii-art 10% education 10% zippy | lolcat'
free='free -gt'
fuck='|tldr'
g2ali='alias | grep -i --colour=always'
g2env='printenv | grep -i --colour=always'
g2h=g2history
g2history='cat "$ZDOTDIR/.zhistory"  | grep -i--colour=always'
g2lol='lol | grep -i --colour=always'
ga='git add'
gb='git branch'
gcb='git checkout -b'
gc='git commit'
gcm='git checkout master'
gco='git checkout '
gdc='git diff --cached'
gd='git diff'
G='|grep --ignore-case  --color=auto'
gl='git log'
GLOG='git log --graph --format=format:"%C(blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white %an%C(reset)%C(yellow)%d%C(reset) %C(white)- %s%C(reset)" --all'
glo='git log --pretty="oneline"'
glol='git log --graph --oneline --decorate'
gp='git push'
gplo='git pull origin'
gpo='git push origin'
gr='git remote'
grs='git remote show'
gs='git status'
gtd='git tag --delete'
gtdr='git tag --delete origin'
H=--help
h=history
l=$'echo -e "\\n\\t${inv}ls -dsAhp --group-directories-first * \\n ${res}\\n"\t&& ls -dsAhp --group-directories-first *'
la=$'echo -e "\\n\\t${inv}ls -plah: Zeigt alles, \t\t\t\t\t\t\t\t\t\t\tmit --group-directories-first${res}\\n" && ls -plah --group-directories-first'
ld='echo -e "\n\t${inv}Zeigt nur Ordner, exkl. versteckte${res}\n" && ls -pshdr */'
lf=$'echo -e "\\n\\t${inv}Zeige nur Dateien an${res}\\n" \t\t\t\t\t\t\t\t\t&& ls -pshdr *.*'
lh='echo -e "\n\t${inv}Zeige nur versteckte Verzeichnisse und Dateien an${res}\n" && ls -pdAh --group-directories-first .*'
ll=$'\techo -e "\\n\\t${inv}Alles und als Liste und von unten nach OBEN${res}\\n" \t\t\t&& ls -palhr'
L='|less -F'
LOG='cat "$ZDOTDIR/log_error/log_error.txt" | grep "error" | sort'
LOGinline='less -F "$ZDOTDIR/log_error/log_error.txt"'
LOGseparate='tail -f "$ZDOTDIR/log_error/log_error.txt"'
lol2g='lol | grep -i --colour=always'
lol='alias | lolcat'
ls='ls ${LS_OPTS}'
lt=$'\n\t\techo -e "\\n\\t${inv}ls -AsltpGH: Liste, sortiert nach Änderungsdatum (älteste zuerst)${res}\\n" && ls -AsltpGH'
lx='echo -e "\n\t${inv}ls -AXlGh: Liste sortiert nach File-EextensionÄnderungsdatum${res}\n" && ls -AXlGhp'
md='echo -e "\t${inv}Erstelle Verzeichnis (falls nicht vorhanden).\n /-p flag to make any necessary parent directories, /-v flag on top of that so we are told of every directory creation${res}\n" && mkdir -pv'
mv='echo -e "\t${inv}Verschiebe/umbenenne Dateien/Verzeichnisse (interacive, verbose)${res}\n" && mv -v -i'
nano=micro
psg='ps aux | grep -v grep | grep -i -e VSZ -e'
ps='ps auxf'
q='echo -e "\t${inv}Beenden${res}\n" && exit'
rm='echo -e "\t${inv}Entferne Dateien/Verzeichnisse (bestätigt)${res}\n" && rm -vdr'
sl=ls
tdlr='echo -e "\t${inv}Zeige verkürzte Handbücher (TL;DR)${res}\n" && tldr'
top=btop
wget='wget -c'
wh_fuck='dpkg -L'
which-command=whence
WMinfo='echo -e "\n\t${inv}...2xklicken!  zeigt Parameter des Windows an!${res}\n" && xprop | grep --color=auto -E WM_CLASS && xwininfo | grep --color=auto geometry'
WMverbose='echo -e "\n\t${inv}\n 2xklicken!... zeigt Parameter des Windows an!${res}\n" && xprop | grep --color=auto -e "WM_CLASS(STRING)" -e "*SIZE*" -e "WM_PROTOCOLS(ATOM):" -e "geometry" -e "_NET_WM_ALLOWED_ACTIONS(ATOM)" && xwininfo | grep --color=auto geometry'
ZALIg='gedit "$ZDOTDIR/aliases.zsh" &  && source "$ZDOTDIR/aliases.zsh" && xcowsay "source $ZDOTDIR/aliases.zsh erfolgreich!"'
ZALI='nano $ZDOTDIR/aliases.zsh && source $ZDOTDIR/aliases.zsh && echo -e "\n\t${inv}source $ZDOTDIR/aliases.zsh erfolgreich!${res}\n" | echo -e "\n\t${inv2}source $ZDOTDIR/aliases.zsh   ---NICHT---  erfolgreich!${res}\n"'
za='zoxide add'
zqi='zoxide query -i'
zq='zoxide query'
ZRCg='gedit "$ZDOTDIR/.zshrc" & && source "$ZDOTDIR/.zshrc"&& xcowsay "source $ZDOTDIR/.zshrc erfolgreich!"'
ZRC='nano "$ZDOTDIR/.zshrc" && source "$ZDOTDIR/.zshrc" && echo -e "\n\t${inv}source $ZDOTDIR/.zshrc erfolgreich!${res}\n"'
zr='zoxide remove'
ZSAVE='echo -e "\n" && cp "$ZDOTDIR/.zshrc" "$ZDOTDIR/bkp/$(date +%F).zshrc.zsh" && cp "$HOME/.zshenv" "$ZDOTDIR/bkp/$(date +%F).zshenv.zsh"  && cp "$ZDOTDIR/aliases.zsh" "$ZDOTDIR/bkp/$(date +%F).aliases.zsh"'
ZSHoptions=setopt
